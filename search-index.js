var searchIndex = new Map(JSON.parse('[["pixie_server",{"t":"FNNNNNNCHHNNNNNCNHCCOCNNNCNNNFNNONNHNHNNNNNHHPPPPPGHNNHNHHNHNNHNNNNHFNNHNNOONNHOONONNNONNNONHHHHHHHH","n":["PixieOptions","augment_args","augment_args_for_update","borrow","borrow_mut","command","command_for_update","dnsmasq","find_mac","find_network","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","http","into","main","ping","state","storage_dir","tcp","try_from","try_into","type_id","udp","update_from_arg_matches","update_from_arg_matches_mut","vzip","DnsmasqHandle","borrow","borrow_mut","child","drop","from","get_hosts","into","main","reload","try_from","try_into","type_id","vzip","write_config","write_hosts","All","Group","Image","IpAddr","MacAddr","UnitSelector","action","borrow","borrow_mut","forget","from","gc","image","into","main","parse","select","status","try_from","try_into","type_id","vzip","main","State","add_chunk","add_image","atomic_write","borrow","borrow_mut","chunk_stats","config","from","gc_chunks","get_image_csize","hostmap","image_stats","into","last","load","reload","set_ping","storage_dir","try_from","try_into","type_id","units","vzip","handle_connection","handle_request","main","broadcast_chunks","broadcast_hint","compute_hint","handle_requests","main"],"q":[[0,"pixie_server"],[29,"pixie_server::dnsmasq"],[45,"pixie_server::http"],[67,"pixie_server::ping"],[68,"pixie_server::state"],[92,"pixie_server::tcp"],[95,"pixie_server::udp"],[100,"clap_builder::builder::command"],[101,"core::net::ip_addr"],[102,"macaddr::addr6"],[103,"anyhow"],[104,"alloc::string"],[105,"ipnet::ipnet"],[106,"core::fmt"],[107,"clap_builder::parser::matches::arg_matches"],[108,"clap_builder"],[109,"core::result"],[110,"clap_builder::util::id"],[111,"core::option"],[112,"core::any"],[113,"std::collections::hash::map"],[114,"pixie_shared::config"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"axum::extract::path"],[118,"axum::extract::state"],[119,"axum_core::response::into_response"],[120,"pixie_shared"],[121,"std::path"],[122,"tokio::net::tcp::stream"],[123,"core::net::socket_addr"],[124,"tokio::net::udp"],[125,"tokio::sync::mpsc::bounded"]],"i":"`Ad00000```00000`0```0`000`000`Bh0000`0`00000``Cl0000``00`0``0`00`0000``Cb0`000000`0000000000000````````","f":"`{bb}0{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{}b}0`{h{{l{j}}}}{h{{l{{Ab{nA`}}}}}}{{{d{Ad}}{d{fAf}}}Ah}{cc{}}{{{d{Aj}}}{{An{AdAl}}}}{{{d{fAj}}}{{An{AdAl}}}}{{}{{Bb{B`}}}}`{{}c{}}{{}{{l{Bd}}}}````{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{dBf}`{{{d{fAd}}{d{Aj}}}{{An{BdAl}}}}{{{d{fAd}}{d{fAj}}}{{An{BdAl}}}}6`{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}`{{{d{fBh}}}Bd}={{{d{{Bj{hn}}}}{d{{Bn{Bl}}}}}{{C`{{Ab{jh{Bb{n}}}}}}}}:{{{Cd{Cb}}}{{l{Bd}}}}{{{d{Bh}}}{{l{Bd}}}}:98<{{{d{Cb}}}{{l{Bd}}}}{{{d{Cb}}{d{{Bn{{Ab{jh{Bb{n}}}}}}}}}{{l{Bd}}}}``````{{{Cf{{Ab{nn}}}}{Ch{{Cd{Cb}}}}}{{`{Cj}}}}87{{{Cf{n}}{Ch{{Cd{Cb}}}}}{{`{Cj}}}}{cc{}}{{{Ch{{Cd{Cb}}}}}{{`{Cj}}}}3{{}c{}}8{{{d{Cb}}n}{{Bb{Cl}}}}{{{d{Cl}}{d{Bl}}}Cn}3{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{dBf}5=`{{{d{Cb}}D`{d{{Bn{Db}}}}}{{l{Bd}}}}{{{d{Cb}}nDd}{{l{Bd}}}}{{{d{Df}}{d{{Bn{Db}}}}}{{l{Bd}}}}{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}``<{{{d{Cb}}}{{l{Bd}}}}{{{d{Dd}}}Dh}``<`{Dj{{l{Cb}}}}2{{{d{Cb}}jDh{C`{Db}}}Bd}`;:9`>{{{Cd{Cb}}DlDn}{{l{Bd}}}}{{{d{Cb}}E`j}{{l{{C`{Db}}}}}}{{{Cd{Cb}}}{{l{Bd}}}}{{{d{Cb}}{d{Eb}}h{Ef{{Ed{Db}}}}}{{l{Bd}}}}{{{d{Cb}}{d{Eb}}h}{{l{Bd}}}}{{{d{Cb}}}{{l{Eh}}}}{{{d{Cb}}{d{Eb}}{Ej{{Ed{Db}}}}}{{l{Bd}}}}4","D":"Ad","p":[[5,"Command",100],[1,"reference"],[0,"mut"],[5,"Ipv4Addr",101],[5,"MacAddr6",102],[8,"Result",103],[5,"String",104],[5,"Ipv4Net",105],[1,"tuple"],[5,"PixieOptions",0],[5,"Formatter",106],[8,"Result",106],[5,"ArgMatches",107],[8,"Error",108],[6,"Result",109],[5,"Id",110],[6,"Option",111],[1,"unit"],[5,"TypeId",112],[5,"DnsmasqHandle",29],[5,"HashMap",113],[5,"Unit",114],[1,"slice"],[5,"Vec",115],[5,"State",68],[5,"Arc",116],[5,"Path",117],[5,"State",118],[10,"IntoResponse",119],[6,"UnitSelector",45],[1,"bool"],[8,"ChunkHash",120],[1,"u8"],[5,"Image",120],[5,"Path",121],[1,"u64"],[5,"PathBuf",121],[5,"TcpStream",122],[6,"SocketAddr",123],[6,"TcpRequest",120],[5,"UdpSocket",124],[1,"array"],[5,"Receiver",125],[5,"Station",120],[5,"Sender",125]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFoACwAAAAkACwAAAA0AAwASAAIAFgAMACQAAAAmABEAOQABADwAEABOAAMAUwARAA=="}],["pixie_shared",{"t":"SGPPFSESSFIFPPPPPSSFPFFPIISSPPPPPPFGGGPPPPCOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNOOOOONNNNNNNNNNNOOONNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOFNNNNNNNNNNNNNNNNNNNNNNGFGFFPPPPPPFPNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNOOONNNNNNONNNNNNNNNNNNNNNNNNNNOOOOOOONNNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["ACTION_PORT","Action","ActionComplete","ActionProgress","Address","BODY_LEN","Bijection","CHUNKS_PORT","CHUNK_SIZE","Chunk","ChunkHash","ChunkStat","Config","Discover","GetAction","GetChunkSize","GetImage","HEADER_LEN","HINT_PORT","HintPacket","HostMap","Image","ImageStat","ImageStats","Ip","Offset","PACKET_LEN","PING_PORT","Pull","Push","Reboot","Register","","RequestChunks","Station","StatusUpdate","TcpRequest","UdpRequest","Units","UploadChunk","UploadImage","Wait","bijection","boot_entry","boot_option_id","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","","","","","","","","clone_into","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","col","config","csize","","default","","deserialize","","","","","","","","","","","disk","eq","fmt","","","","","","","","","","","from","","","","","","","","","","","group","groups","hash","image","images","","into","","","","","","","","","","","ip","port","reclaimable","ref_cnt","row","serialize","","","","","","","","","","","size","start","station","to_owned","","","","","","","","","","","total_csize","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","image","","Bijection","as_slice","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deserialize","eq","fmt","from","get_by_first","get_by_second","into","into_iter","iter","new","serialize","to_owned","try_from","try_into","type_id","ActionKind","Config","DhcpMode","HostsConfig","HttpConfig","Proxy","Pull","Push","Reboot","Register","Static","Unit","Wait","borrow","","","","","","borrow_mut","","","","","","broadcast_speed","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","col","curr_action","curr_progress","deserialize","","","","","","dhcp","eq","","","","","","fmt","","","","","","","from","","","","","","from_str","group","groups","hosts","hostsfile","http","image","images","into","","","","","","last_ping_msg","last_ping_timestamp","listen_on","","mac","next_action","password","row","serialize","","","","","","static_ip","to_owned","","","","","","to_string","try_from","","","","","","try_into","","","","","","type_id","","","","",""],"q":[[0,"pixie_shared"],[222,"pixie_shared::Action"],[224,"pixie_shared::bijection"],[247,"pixie_shared::config"],[374,"core::result"],[375,"serde::de"],[376,"core::fmt"],[377,"serde::ser"],[378,"core::any"],[379,"core::cmp"],[380,"core::clone"],[381,"core::option"],[382,"core::iter::traits::iterator"],[383,"alloc::string"],[384,"core::net::ip_addr"]],"i":"``AhAf````````Aj1222```0``0````Ad00032````1330`h0f1jlnA`Ab79:8564321079:8564321079:8564321079:8564321079:82`5320564321079:864564321079:8564321079:8215241564321079:800432564321079:8551564321079:84564321079:8564321079:8564321079:8EhEj`Bl000000000000000000000`````DdDj0001`01DfDh2DlDn532410353241053241053241000053241035324105324410532410401131015324100032002053241005324104532410532410532410","f":"`````````````````````````````````````````````{b{{b{c}}}{}}0000000000{{{b{d}}}{{b{dc}}}{}}0000000000{{{b{f}}}f}{{{b{h}}}h}{{{b{j}}}j}{{{b{l}}}l}{{{b{n}}}n}{{{b{A`}}}A`}{{{b{Ab}}}Ab}{{{b{Ad}}}Ad}{{{b{Af}}}Af}{{{b{Ah}}}Ah}{{{b{Aj}}}Aj}{{b{b{dc}}}Al{}}0000000000{bAl}0000000000````{{}n}{{}Ab}{c{{An{f}}}B`}{c{{An{h}}}B`}{c{{An{j}}}B`}{c{{An{l}}}B`}{c{{An{n}}}B`}{c{{An{A`}}}B`}{c{{An{Ab}}}B`}{c{{An{Ad}}}B`}{c{{An{Af}}}B`}{c{{An{Ah}}}B`}{c{{An{Aj}}}B`}`{{{b{j}}{b{j}}}Bb}{{{b{f}}{b{dBd}}}Bf}{{{b{h}}{b{dBd}}}Bf}{{{b{j}}{b{dBd}}}Bf}{{{b{l}}{b{dBd}}}Bf}{{{b{n}}{b{dBd}}}Bf}{{{b{A`}}{b{dBd}}}Bf}{{{b{Ab}}{b{dBd}}}Bf}{{{b{Ad}}{b{dBd}}}Bf}{{{b{Af}}{b{dBd}}}Bf}{{{b{Ah}}{b{dBd}}}Bf}{{{b{Aj}}{b{dBd}}}Bf}{cc{}}0000000000``````{{}c{}}0000000000`````{{{b{f}}c}AnBh}{{{b{h}}c}AnBh}{{{b{j}}c}AnBh}{{{b{l}}c}AnBh}{{{b{n}}c}AnBh}{{{b{A`}}c}AnBh}{{{b{Ab}}c}AnBh}{{{b{Ad}}c}AnBh}{{{b{Af}}c}AnBh}{{{b{Ah}}c}AnBh}{{{b{Aj}}c}AnBh}```{bc{}}0000000000`{c{{An{e}}}{}{}}0000000000{{}{{An{c}}}{}}0000000000{bBj}0000000000```{{{b{{Bl{ce}}}}}{{b{{C`{{Bn{ce}}}}}}}CbCb}{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{Bl{ce}}}}}{{Bl{ce}}}CdCd}{{b{b{dc}}}Al{}}{bAl}{{}{{Bl{ce}}}{}{}}{c{{An{{Bl{eg}}}}}B`CfCf}{{{b{{Bl{ce}}}}{b{{Bl{ce}}}}}Bb{CbCdCh}{CbCdCh}}{{{b{{Bl{ce}}}}{b{dBd}}}BfCjCj}{cc{}}{{{b{{Bl{ce}}}}{b{c}}}{{Cl{{b{e}}}}}CbCb}{{{b{{Bl{ce}}}}{b{e}}}{{Cl{{b{c}}}}}CbCb}{{}c{}}{{{Bl{ce}}}g{}{}{}}{{{b{{Bl{ce}}}}}{{`{{D`{}{{Cn{{b{{Bn{ce}}}}}}}}}}}CbCb}{{}{{Bl{ce}}}CbCb}{{{b{{Bl{ce}}}}g}AnDbDbBh}{bc{}}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{bBj}`````````````{b{{b{c}}}{}}00000{{{b{d}}}{{b{dc}}}{}}00000`{{{b{Dd}}}Dd}{{{b{Df}}}Df}{{{b{Dh}}}Dh}{{{b{Dj}}}Dj}{{{b{Dl}}}Dl}{{{b{Dn}}}Dn}{{b{b{dc}}}Al{}}00000{bAl}00000```{c{{An{Dd}}}B`}{c{{An{Df}}}B`}{c{{An{Dh}}}B`}{c{{An{Dj}}}B`}{c{{An{Dl}}}B`}{c{{An{Dn}}}B`}`{{{b{Dd}}{b{Dd}}}Bb}{{{b{Df}}{b{Df}}}Bb}{{{b{Dh}}{b{Dh}}}Bb}{{{b{Dj}}{b{Dj}}}Bb}{{{b{Dl}}{b{Dl}}}Bb}{{{b{Dn}}{b{Dn}}}Bb}{{{b{Dd}}{b{dBd}}}Bf}{{{b{Df}}{b{dBd}}}Bf}{{{b{Dh}}{b{dBd}}}Bf}{{{b{Dj}}{b{dBd}}}Bf}{{{b{Dj}}{b{dBd}}}{{An{AlE`}}}}{{{b{Dl}}{b{dBd}}}Bf}{{{b{Dn}}{b{dBd}}}Bf}{cc{}}00000{{{b{Eb}}}{{An{DjEd}}}}```````{{}c{}}00000````````{{{b{Dd}}c}AnBh}{{{b{Df}}c}AnBh}{{{b{Dh}}c}AnBh}{{{b{Dj}}c}AnBh}{{{b{Dl}}c}AnBh}{{{b{Dn}}c}AnBh}{{{b{Dn}}}Ef}{bc{}}00000{bEd}{c{{An{e}}}{}{}}00000{{}{{An{c}}}{}}00000{bBj}00000","D":"F`","p":[[1,"reference"],[0,"mut"],[5,"Chunk",0],[5,"Image",0],[5,"ImageStat",0],[5,"ChunkStat",0],[5,"Station",0],[5,"HintPacket",0],[5,"Address",0],[6,"Action",0],[6,"UdpRequest",0],[6,"TcpRequest",0],[6,"StatusUpdate",0],[1,"unit"],[6,"Result",374],[10,"Deserializer",375],[1,"bool"],[5,"Formatter",376],[8,"Result",376],[10,"Serializer",377],[5,"TypeId",378],[5,"Bijection",224],[1,"tuple"],[1,"slice"],[10,"PartialEq",379],[10,"Clone",380],[10,"Deserialize",375],[10,"Ord",379],[10,"Debug",376],[6,"Option",381],[17,"Item"],[10,"Iterator",382],[10,"Serialize",377],[6,"DhcpMode",247],[5,"HostsConfig",247],[5,"HttpConfig",247],[6,"ActionKind",247],[5,"Config",247],[5,"Unit",247],[5,"Error",376],[1,"str"],[5,"String",383],[5,"Ipv4Addr",384],[15,"Push",222],[15,"Pull",222]],"r":[[6,224]],"b":[[310,"impl-Debug-for-ActionKind"],[311,"impl-Display-for-ActionKind"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEYBEgAAAAkADAAJABcAAgAbAEsAaAAaAI4AAwCTAAAAnwBMAO0AAQDwAAoA/AAAAP4AAwADASkALgEMAEEBAwBGAQIATwEBAFIBJAA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[4245,6725]}