searchState.loadedDescShard("pixie_server", 0, "Command line arguments for pixie-server.\nStarts and configures dnsmasq.\nFinds the mac address for the given ip.\nFind the network where the server has the given IP.\nReturns the argument unchanged.\nHTTP server for the admin web interface.\nCalls <code>U::from(self)</code>.\nHandles pings from clients.\nThe database for pixie-server.\nDirectory in which files will be stored. Must already …\nHandles <code>TcpRequest</code>\nHandles <code>UdpRequest</code>\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>GET /admin/action/{unit_selector}/{action}</code>\n<code>GET /admin/curr_action/{unit_selector}/{action}</code>\n<code>GET /admin/forget/{unit_selector}</code>\n<code>GET /admin/gc</code>\n<code>GET /admin/image/{unit_selector}/{image}</code>\n<code>GET /admin/status</code>\nSee the module-level documentation.\nStore the given chunk to the database.\nAtomically write <code>data</code> at the specified <code>path</code>.\nBuilds a map from ip address to hostname parsing the …\nThe config parsed from the config file.\nReturns the argument unchanged.\nFinds and deletes all chunks which are not part of any …\nGet the chunk compressed data.\nFinds the <code>Unit</code> with the given <code>mac</code>.\nFinds all <code>Unit</code>s accepted by the <code>selector</code>.\nChecks whether the database contains the given chunk.\nThe hostmap built from the hostmap file.\nCalls <code>U::from(self)</code>.\nLoads the <code>State</code> from the given path.\nA directory stored in ram for dynamically generated files, …\nThe storage_dir received by command line arguments.\nSets the action as completed for the selected <code>Unit</code>.\nAssumes that new_image is valid\nSelects all units.\nSelects all units from the given group.\nSelects all units with the given image.\nSelects the unit with the given ip address.\nSelects the unit with the given mac address.\nA filter over units.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nParse a <code>UnitSelector</code> from a <code>String</code>.\nReturns <code>true</code> if the given <code>Unit</code> is accepted.")