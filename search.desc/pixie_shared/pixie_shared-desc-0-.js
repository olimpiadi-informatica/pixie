searchState.loadedDescShard("pixie_shared", 0, "Tells the server that the action is complete and can …\nSets the progress of the client for the current action.\nudp port for chunk broadcasting.\nDescribes one chunk from a disk.\nThe hash of a chunk of a disk.\nUsed for server discovery. To be sent in broadcast over …\nFetch the image from the server and flash it to the disk.\nAsks the server for the client action to run. The server …\nAsks the server the <code>Image</code>, the image name is deduced by …\nudp port for registration hint broadcasting.\nChecks if the server contains the chunk in the database. …\nAn image is given by the list of chunks of the disk, the …\nMaximum size in bytes for a chunk.\nThe offset of the chunk of a disk.\nudp port for pings from workstations.\nReboot into the OS.\nRegister the machine.\nRegisters the client with the given info. The response is …\nRequests the given chunks to be broadcasted by the server.\nShutdown the machine.\nMake an image out of the current content of the disk and …\nA request for the tcp server.\nThe maximum number of bytes in a udp packet with mtu 1500\nA request for the udp server.\nUploads the given chunk to the server, the content is …\nUploads the <code>Image</code> to the server, the image name is deduced …\nWait for another command.\nComputes the compressed size in bytes of an image.\nCompressed size\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nsize and csize\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nComputes the size in bytes of an image.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRegistered clients will always be assigned an IP in the …\nUnknown clients are assumed to receive an IP address by …\nUnknown clients will be assigned IPs in the specified …\nSpeed in bytes/second used to broadcast chunks.\nDHCP server.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHosts file to use for DHCP hostnames.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nListen on address")